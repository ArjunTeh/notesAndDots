#+OPTIONS: toc:1
* Simulation
** [[http://pub.ist.ac.at/group_wojtan/projects/2013_Ando_HALSoTM/download/tetflip.pdf][Highly Adaptive Liquid Simulations on Tetrahedral Meshes]]
   This is basically an application of many different methods used fluid mechanics before it. With the addition of formulating the grid as
   a set of tets that can have variable sizes. Should look further into the boundary conditions. Otherwise, standard FLIP/PIC use.
** [[https://arxiv.org/abs/1408.1118][Spoke-Darts for High-Dimensional Blue-Noise Sampling]]
   Useful in which applications? Most configuration exploration problems a level of sampling. Why is blue noise the right choice here?
   It makes sense that a robust sampling method is useful, how can this be applied in ways to adapt over a preliminary choice of samples?
   Constrain the algorithm based on the application?
** [[https://lgg.epfl.ch/publications/2014/ProjectiveDynamics//paper.pdf][Projective Dynamics: Fusing Constraint Projections for Fast Simulation]]
   What's the insight of the integrator here? Maybe that constraints can be synthesized in smarter ways so that they are easier to compute

** [[http://www.pnas.org/content/110/45/18327][Simulation as an engine of physical scene understanding]]
   The simulation here is not very complex, and probably only simulates simple scenes. Though the main construction of the simulation seems
   to be pretty interesting. Generally using a stochastic approach-using one run of the simulation as a sample in the probabilistic domain
   
   "The IPE performs prediction by simulation and incorporates uncertainty about the scene by treating its simulation runs as statistical samples"

* Configuration in robotics
** [[http://www.roboticsproceedings.org/rss01/p15.pdf][Towards Optimal Configuration Space Sampling]]
   Another question of how to properly sample the configuration space so that you can obtain optimal path planning.

* Deep Learning assistance
** [[https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8202133][Domain Randomization for Transferring Deep Neural Networks from Simulation to the Real World]]
   Only concerned with the domain randomization problem here. More like is there a way to explore/assess coverage? This looks more like the beginning
   of this idea of domain exploration.

* Rendering
** [[https://link.springer.com/chapter/10.1007%2F978-3-319-10584-0_11][Differentiable Rendering]]
** [[https://dl.acm.org/citation.cfm?id=2766930][Variance analysis for Monte Carlo integration]]
   Talks about a language for assessing the different sampling strategies for raytracing
